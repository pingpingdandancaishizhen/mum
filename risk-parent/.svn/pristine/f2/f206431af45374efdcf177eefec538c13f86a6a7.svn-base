<template>
  <div>
    <div class="row-right" :class="!checkedAdd?'col-sm-6':'col-sm-6 checkedAdd'">
      <div class="form-group input-group " :id="data.key">
        <label class="label-head label-head-lg label-head-top  text-right"  v-if="!checkedAdd"><span :class="data.required?'require':''">{{data.label}}:</span></label>
        <div class="label-box label-box-sm">
          <select :name="data.key" class="form-control" @change="handleChange" v-model="checkValue" :disabled="data.readonly?true:false">
            <option value="">请选择{{data.label}}</option>
            <option v-for="item in oData2" :value="item.dicKey"  >{{item.dicValue}}</option>
          </select>
          <div class="form-error-tip">{{errorMsg[data.key]}}</div>
        </div>
        <component v-if='itemLength<=1&&checkValue!=""&&checkValue!="请选择"&&data.extEditors' :is="currentView[checkValue]" :data="data.extEditors[checkValue]" :checkedAdd="true" keep-alive> </component>
      </div>
    </div>
    <component v-if='itemLength>1&&checkValue!=""&&checkValue!="请选择"&&data.extEditors' :is="currentView[checkValue]" :data="data.extEditors[checkValue]" keep-alive> </component>
  </div>


</template>
<style>
</style>
<script>
  import {mapGetters} from 'vuex';
  import * as api from '../api'
  import checkRule from '../mixins/checkRule'
  export default{
    mixins:[checkRule],
    data(){
      return {
        checkValue:'',
        oData2:[],
        itemLength:'',
//        currentView:[],
//        selected:'请选择'
      }
    },
    props: ['data','attrsData','checkedAdd'],
    computed:{
      ...mapGetters({
        'hiddenData': 'defaultHiddenData',
      }),
      currentView(){
        var currentView=[];
        currentView[this.checkValue]='app-layout';
        this.itemLength=(this.data.extEditors[this.checkValue]||[]).length;
        return currentView;
      }
    },
    created:function () {
      var attrValue=this.attrsData[this.data.key];
      var selectData=attrValue ? (attrValue.draftValue==null?(attrValue.attrValue||''):attrValue.draftValue) : '';
      this.checkValue=selectData;
      this.$store.dispatch('setInputData', {key: this.data.key, value: selectData});
      this.$watch('checkValue',this.handleWatch)
    },
    beforeCreate: function () {
      this.$options.components['app-layout'] = require('./layout.vue');
    },
    beforeMount:function () {
      this.getOptions();
    },
    methods: {
      handleChange: function (e) {
        var value = e.target.value;
        if(value=='请选择'){
          value=''
        }
        this.checkValue=value;
        this.currentView=[];
        for(var key in this.data.extEditors){
          if(value==key){
            this.currentView[value]='app-layout'
          }
        }
        /*if(value=='请选择'){
         value='';
         }*/
        this.$store.dispatch('setInputData', {key: this.data.key, value: value})
      },
      getOptions:function () {
        var _this=this;
        let param=_this.data.param;
        var option={
          url:param,
          data:_this.hiddenData,
          method:'get',
          beforeSend(){
            _this.$store.dispatch('showLoad',{[_this.data.key]:true});
          },
          success(){
            _this.$store.dispatch('showLoad',{[_this.data.key]:false});
          }
        };
        if(param){
          api.getOptions2(option,function (data) {
            _this.$nextTick(function () {
              _this.oData2=data;
            })

          })
        }

      },
      handleWatch:function (val) {
        var valData={};
        valData[this.data.key]=val;
        this.checkRuleValue=Object.assign({},this.checkRuleValue,valData);
        this.$store.dispatch('setInputData', {key: this.data.key, value: val});
      }
    },

  }
</script>
