<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sunfit.risk.buz.server.dao.api.jfjd.JFCorpUserDAO">  

	<resultMap id="BaseResultMap" type="cn.sunfit.risk.buz.api.beans.api.jfjd.JFCorpUser" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="corp_id" property="corpId" jdbcType="VARCHAR" />
    <result column="dept_id" property="deptId" jdbcType="VARCHAR" />
    <result column="user_account" property="userAccount" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="desc" property="desc" jdbcType="VARCHAR" />
    <result column="idcard" property="idcard" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="VARCHAR" />
    <result column="last_mod_time" property="lastModTime" jdbcType="TIMESTAMP" />
    <result column="is_first_login" property="isFirstLogin" jdbcType="VARCHAR" />
    <result column="error_times" property="errorTimes" jdbcType="INTEGER" />
    <result column="error_day" property="errorDay" jdbcType="TIMESTAMP" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="client_id" property="clientId" jdbcType="VARCHAR" />
    <result column="channel" property="channel" jdbcType="VARCHAR" />
  </resultMap>
   <resultMap id="CorpUserDTOMap" type="cn.sunfit.risk.buz.api.beans.api.jfjd.JFCorpUserDTO" extends="BaseResultMap">
   <result column="is_admin" property="isAdmin" jdbcType="BIT" />
   <result column="corp_name" property="corpName" jdbcType="VARCHAR" />
   <result column="corp_simple_name" property="corpSimpleName" jdbcType="VARCHAR" />
   <result column="dept_name" property="deptName" jdbcType="VARCHAR" />
   <result column="dept_code" property="deptCode" jdbcType="VARCHAR" />
   <result column="domain" property="domain" jdbcType="VARCHAR" />
   <result column="role_names" property="roleNames" jdbcType="VARCHAR" />
  </resultMap>
    <sql id="Base_Column_List" >
    id, corp_id, dept_id, user_account, user_name, salt, password, email, `desc`, idcard, 
    telephone, job, status, last_mod_time, is_first_login, error_times, error_day, create_time, 
    client_id,channel
  </sql>
  <sql id="Base_Column_List_CU" >
    cu.id, cu.corp_id, cu.dept_id, cu.user_account, cu.user_name, cu.salt, cu.password, cu.email, cu.`desc`, cu.idcard, 
    cu.telephone, cu.job, cu.status, cu.last_mod_time, cu.is_first_login, cu.error_times, cu.error_day, cu.create_time, 
    cu.client_id,cu.channel
  </sql>

  <select id="getExisitUserCount" parameterType="cn.sunfit.risk.buz.api.vo.api.jfjd.JFCorpUserExisitQueryReq" resultType="int">
  	select count(*) from risk_corp_user where idcard = #{idCard} and corp_id = #{corpId};
  </select>
  
  <select id="getIdByCard" parameterType="cn.sunfit.risk.buz.api.vo.api.jfjd.JFCorpUserExisitQueryReq" resultType="string">
  	select id from risk_corp_user where idcard = #{idCard} and corp_id = #{corpId} limit 1;
  </select>
  
  <select id="selectUserById" resultMap="CorpUserDTOMap" parameterType="java.lang.String">
		select
		 <include refid="Base_Column_List_CU" />
		,(select if(count(1)<![CDATA[>]]>0 ,1,0) from risk_corp_user_role_rel cur 
		left join risk_corp_role cr on cur.corp_id =
		cr.corp_id and cur.role_id =cr.id
		where cu.corp_id = cur.corp_id and	cu.id
		= cur.user_id and cr.is_admin=1
		) as is_admin,(select GROUP_CONCAT(cr.role_name) from risk_corp_user_role_rel cur 
		left join risk_corp_role cr on cur.corp_id = cr.corp_id and cur.role_id =cr.id
		where cu.corp_id = cur.corp_id and
		cu.id = cur.user_id 
		) as role_names,co.corp_name,co.simple_name as corp_simple_name,co.`domain`,cd.dept_name,cd.dept_code
		from risk_corp_user cu
		left join risk_corp co on cu.corp_id = co.id 
		left join risk_corp_dept cd on cu.dept_id = cd.id
		where 1=1 
			and cu.id = #{id}
	</select>
</mapper>