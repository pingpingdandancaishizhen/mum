package cn.sunfit.risk.buz.server.service.p2p.imp.handle;

import java.io.IOException;
import java.io.InputStream;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import org.apache.poi.xssf.usermodel.XSSFCell;
import org.apache.poi.xssf.usermodel.XSSFRow;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import cn.sunfit.risk.buz.api.constants.asset.BuyingOption;
import cn.sunfit.risk.buz.api.constants.asset.HousePropertyType;
import cn.sunfit.risk.buz.api.constants.asset.LoanWayType;
import cn.sunfit.risk.buz.api.constants.asset.OwnershipOfProperty;
import cn.sunfit.risk.buz.api.constants.order.CompanyType;
import cn.sunfit.risk.buz.api.constants.order.CustomerType;
import cn.sunfit.risk.buz.api.constants.order.EducationType;
import cn.sunfit.risk.buz.api.constants.order.GenderType;
import cn.sunfit.risk.buz.api.constants.order.LoanRepaymentType;
import cn.sunfit.risk.buz.api.constants.order.LoanUsageType;
import cn.sunfit.risk.buz.api.constants.order.MaritalStatus;
import cn.sunfit.risk.buz.api.constants.order.RelationType;
import cn.sunfit.risk.buz.api.service.p2p.excel.ImportExcelTemplateService;
import cn.sunfit.risk.buz.api.service.p2p.excel.P2PBankService;
import cn.sunfit.risk.buz.api.service.p2p.product.P2PProductService;
import cn.sunfit.risk.buz.util.p2p.DateUtil;

/**
 * 
 * @Title: CYDImportHandle.java
 * @Package cn.sunfit.risk.buz.server.service.p2p.imp.handle
 * @Description: 车易贷的导入处理，包含了封装数据，验证，插入，开启流程等
 * @author DELL
 * @date 2017年5月5日 下午1:11:17
 * @version V1.0
 */
@Service("cydimporthandle")
public class CYDImportHandle extends ImportHandleAbstrat {

    /**
     * 车易贷导入校验模板
     */
    private static List<Map<String, Object>> cydCheckTemps = null;

    @Autowired
    private ImportExcelTemplateService importExcelTemplateService;

    @Autowired
    private P2PProductService p2PProductService;

    @Autowired
    private P2PBankService p2PBankService;

    public Map<String, Object> excelToMap(String userId, InputStream in, String importCode) throws IOException {
        Map<String, Object> result = new HashMap<String, Object>();
        List<Map<String, Object>> datas = new ArrayList<Map<String, Object>>();
        Map<String, Object> data = null;
        List<Map<String, Object>> errList = new ArrayList<Map<String, Object>>();
        Map<String, Object> err = null;
        XSSFWorkbook wb = new XSSFWorkbook(in);
        XSSFSheet sheet = wb.getSheetAt(0);
        int totalRow = sheet.getLastRowNum() + 1;
        if (totalRow == 0)
            return null;
        int totalCellNum = sheet.getRow(0).getLastCellNum();
        List<String> cellNames = getCellNames(sheet.getRow(0));
        if (cellNames.size() != cydCheckTemps.size()) {
            result.put("errStr", "导入失败，导入模板列数不匹配!");
            return result;
        }

        XSSFRow row = null;
        XSSFCell cell = null;
        Date sysDate = new Date();
        for (int i = 1; i < totalRow; i++) {
            data = new HashMap<String, Object>();
            err = new HashMap<String, Object>();
            row = sheet.getRow(i);
            if (!isNotEmpty(row, totalCellNum))
                continue;
            if (i > 1001) {
                result.put("errStr", "导入失败，一次导入订单数不能超过1000条!");
                return result;
            }
            for (int k = 0; k < totalCellNum; k++) {
                cell = row.getCell(k);
                cellCheck(cell, cellNames, cydCheckTemps, k, data, err, i);
                if (err.size() > 0) {
                    errList.add(err);
                    break;
                }
            }
            if (err.size() > 0)
                continue;

            for (Map<String, Object> m : datas) {
                if (m.get("thirdLoanId").toString().equals(data.get("thirdLoanId").toString())) {
                    err.put("id", i);
                    err.put("thirdLoanId", data.get("thirdLoanId").toString());
                    err.put("err", "此行订单与第" + m.get("index").toString() + "条订单重复!");
                    errList.add(err);
                    break;
                }
            }

            if (err.size() > 0)
                continue;

            data.put("loanHandleType", "1");
            data.put("createTime", DateUtil.dateToStringFour(sysDate));
            data.put("createUser", userId);
            data.put("importCode", importCode);
            data.put("index", i);
            datas.add(data);
        }

        String loanIds = "";
        String corporation = "融金所";
        for (Map<String, Object> m : datas) {
            loanIds += m.get("thirdLoanId").toString() + ",";
        }
        if (loanIds.length() > 0) {
            loanIds = loanIds.substring(0, loanIds.length() - 1);
            Map<String, Object> param = new HashMap<String, Object>();
            param.put("thirdLoanIds", loanIds);
            param.put("corporation", corporation);
            List<Long> existLoanIds = importExcelTemplateService.queryExistLoanIds(param);
            List<Map<String, Object>> existList = new ArrayList<Map<String, Object>>();
            if (existLoanIds != null && existLoanIds.size() > 0) {
                for (Map<String, Object> m : datas) {
                    if (existLoanIds.contains(Long.valueOf(m.get("thirdLoanId").toString()))) {
                        existList.add(m);
                    }
                }
            }

            datas.removeAll(existList);

            for (Map<String, Object> m : existList) {
                err = new HashMap<String, Object>();
                err.put("id", m.get("index").toString());
                err.put("thirdLoanId", m.get("thirdLoanId").toString());
                err.put("err", "此订单在系统中已存在！");
                errList.add(err);
            }
        }

        result.put("data", datas);
        result.put("err", errList);
        return result;
    }

    private List<Map<String, Object>> getCydCheckTemp() {
        if (cydCheckTemps == null) {
            List<Map<String, String>> product = p2PProductService.findRiskProductList();
            List<Map<String, String>> banks = p2PBankService.getBankList();

            cydCheckTemps = new ArrayList<Map<String, Object>>();
            Map<String, Object> cydCheckTemp = null;

            // 订单号
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "thirdLoanId");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "必须为数字");
            cydCheckTemp.put("checkWay", "^[0-9]\\d*$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 产品代码
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "productCode");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "产品代码必须是CYD");
            cydCheckTemp.put("checkWay", "^CYD$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemps.add(cydCheckTemp);

            // 产品名称
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "productName");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "产品名称必须是车易贷");
            cydCheckTemp.put("checkWay", "^车易贷$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemps.add(cydCheckTemp);

            // 借款形式
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "loanWayType");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "借款形式填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("baseEnums", LoanWayType.values());
            cydCheckTemps.add(cydCheckTemp);

            // 借款用途
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "loanPurpose");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("baseEnums", LoanUsageType.values());
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 还款方式
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "repayType");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("baseEnums", LoanRepaymentType.values());
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 借款期限
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "loanPeriod");
            cydCheckTemp.put("type", "Integer");
            cydCheckTemp.put("typeName", "必须为数字");
            cydCheckTemp.put("checkWay", "^\\d{1,2}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 2);
            cydCheckTemp.put("checkFun", "periodValidate");
            cydCheckTemp.put("parentKey", "repayType");
            cydCheckTemps.add(cydCheckTemp);

            // 借款金额
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "loanMoney");
            cydCheckTemp.put("type", "BigDecimal");
            cydCheckTemp.put("typeName", "必须为亿万以下的数字");
            cydCheckTemp.put("checkWay", "^[1-9]\\d*(\\.\\d{1,2})?$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 13);
            cydCheckTemps.add(cydCheckTemp);

            // 抵押权人
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "pledgee");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\u4e00-\u9fa5a-zA-Z]{2,20}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 咨询费
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "consultingFee");
            cydCheckTemp.put("type", "BigDecimal");
            cydCheckTemp.put("typeName", "必须为十亿以下的数字");
            cydCheckTemp.put("checkWay", "^[1-9]\\d*(\\.\\d{1,2})?$");
            cydCheckTemp.put("length", 13);
            cydCheckTemps.add(cydCheckTemp);

            // GPS安装费
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "gpsInstallationFee");
            cydCheckTemp.put("type", "BigDecimal");
            cydCheckTemp.put("typeName", "必须为十亿以下的数字");
            cydCheckTemp.put("checkWay", "^[1-9]\\d*(\\.\\d{1,2})?$");
            cydCheckTemp.put("length", 13);
            cydCheckTemps.add(cydCheckTemp);

            // 客户类型
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "customerType");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("baseEnums", CustomerType.values());
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 客户姓名
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "customerName");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\u4e00-\u9fa5a-zA-Z]{2,20}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 性别
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "gender");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("baseEnums", GenderType.values());
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 年龄
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "age");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[0-9]{1,3}$");
            cydCheckTemps.add(cydCheckTemp);

            // 身份证号
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "idCard");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^\\d{18}$|^\\d{17}[Xx]$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 18);
            // cydCheckTemp.put("checkFun", "idCarValidate");
            cydCheckTemps.add(cydCheckTemp);

            // 户口所在地-省
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "houseHoldProvince");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemps.add(cydCheckTemp);

            // 户口所在地-市
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "houseHoldCity");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemp.put("parentKey", "houseHoldProvince");
            cydCheckTemps.add(cydCheckTemp);

            // 户口所在地-区/县
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "houseHoldRegion");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemp.put("parentKey", "houseHoldCity");
            cydCheckTemps.add(cydCheckTemp);

            // 户口所在地-街道
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "houseHoldAddress");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^.{2,}$");
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 婚姻状况
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "marriage");
            cydCheckTemp.put("type", "Integer");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("baseEnums", MaritalStatus.values());
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 子女数
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "hasChild");
            cydCheckTemp.put("type", "Integer");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^\\d+$");
            cydCheckTemp.put("length", 2);
            cydCheckTemps.add(cydCheckTemp);

            // 最高学历
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "hightDegree");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("baseEnums", EducationType.values());
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 手机号码1
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "mobilePhoneOne");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "必须是11位数字");
            cydCheckTemp.put("checkWay", "^\\d{11}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 11);
            cydCheckTemps.add(cydCheckTemp);

            // 手机号码2
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "mobilePhoneTwo");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "必须是11位数字");
            cydCheckTemp.put("checkWay", "^\\d{11}$");
            cydCheckTemp.put("length", 11);
            cydCheckTemps.add(cydCheckTemp);

            // 住宅电话
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "homePhone");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\\d\\-]*$");
            cydCheckTemp.put("length", 13);
            cydCheckTemps.add(cydCheckTemp);

            // qq
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "qq");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\\d]{1,15}*$");
            cydCheckTemp.put("length", 15);
            cydCheckTemps.add(cydCheckTemp);

            // 邮箱
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "mail");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp
                    .put("checkWay",
                            "^[\\w!#$%&'*+/=?^_`{|}~-]+(?:\\.[\\w!#$%&'*+/=?^_`{|}~-]+)*@(?:[\\w](?:[\\w-]*[\\w])?\\.)+[\\w](?:[\\w-]*[\\w])?$");
            cydCheckTemps.add(cydCheckTemp);

            // 微信
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "wechat");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[a-zA-Z][a-zA-Z0-9_-]{5,19}$");
            cydCheckTemps.add(cydCheckTemp);

            // 来本市时间
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "arrivedCityTime");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[^a-zA-Z]{6,20}$");
            cydCheckTemps.add(cydCheckTemp);

            // 现住地址-省
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "curHouseHoldProvince");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemps.add(cydCheckTemp);

            // 现住地址-市
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "curHouseHoldCity");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemp.put("parentKey", "houseHoldProvince");
            cydCheckTemps.add(cydCheckTemp);

            // 现住地址-区/县
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "curHouseHoldRegion");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemp.put("parentKey", "houseHoldCity");
            cydCheckTemps.add(cydCheckTemp);

            // 现住地址-街道
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "curHouseHoldAddress");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^.{2,}$");
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 现住址入住时间
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "checkInTime");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[^a-zA-Z]{6,20}$");
            cydCheckTemps.add(cydCheckTemp);

            // 房产类型
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "houseProperty");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("baseEnums", HousePropertyType.values());
            cydCheckTemps.add(cydCheckTemp);

            // 芝麻信用分
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "zMCreditScore");
            cydCheckTemp.put("type", "Integer");
            cydCheckTemp.put("typeName", "必须为350--950内的数字");
            cydCheckTemp.put("checkWay", "^3[5-9]\\d$|^[4-8]\\d{2}$|^9[0-4]\\d$|^950$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 3);
            cydCheckTemps.add(cydCheckTemp);

            // 房产地址-省
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "houseHoldProvince");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemps.add(cydCheckTemp);

            // 房产地址-市
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "houseHoldCity");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemp.put("parentKey", "houseHoldProvince");
            cydCheckTemps.add(cydCheckTemp);

            // 房产地址-区/县
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "houseHoldRegion");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemp.put("parentKey", "houseHoldCity");
            cydCheckTemps.add(cydCheckTemp);

            // 房产地址-街道
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "houseHoldAddress");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^.{2,}$");
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 购买方式
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "buyingOption");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("baseEnums", BuyingOption.values());
            cydCheckTemps.add(cydCheckTemp);

            // 购买/建成日期
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "buyOrBuildDate");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[^a-zA-Z]{6,20}$");
            cydCheckTemp.put("baseEnums", BuyingOption.values());
            cydCheckTemps.add(cydCheckTemp);

            // 房产所有权性质
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "ownershipOfProperty");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("baseEnums", OwnershipOfProperty.values());
            cydCheckTemps.add(cydCheckTemp);

            // 车牌号码
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "plateNumber");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("checkWay", "^[\u4e00-\u9fa5a-zA-Z0-9]{7}$");
            cydCheckTemp.put("baseEnums", BuyingOption.values());
            cydCheckTemps.add(cydCheckTemp);

            // 初次登记日期
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "recordDate");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("checkWay", "^[^a-zA-Z]{6,20}$");
            cydCheckTemps.add(cydCheckTemp);

            // 车辆品牌
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "carBrands");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "不能为空");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("checkWay", "");
            cydCheckTemps.add(cydCheckTemp);

            // 职业类型
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "jobType");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("baseEnums", CompanyType.values());
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 公司名称
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "companyName");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^.+$");
            cydCheckTemp.put("length", 40);
            cydCheckTemps.add(cydCheckTemp);

            // 公司电话
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "companyTel");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[0-9\\-]+$");
            cydCheckTemp.put("length", 13);
            cydCheckTemps.add(cydCheckTemp);

            // 部门职位
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "jobTitle");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\u4e00-\u9fa5a-zA-Z]{2,}$");
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 毕业院校
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "graduateInstitutions");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\u4e00-\u9fa5a-zA-Z]{2,}$");
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 学校地址-省
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "schoolProvince");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemps.add(cydCheckTemp);

            // 学校地址-市
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "schoolCity");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemp.put("parentKey", "schoolProvince");
            cydCheckTemps.add(cydCheckTemp);

            // 学校地址-县
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "schoolRegion");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemp.put("parentKey", "schoolCity");
            cydCheckTemps.add(cydCheckTemp);

            // 学校地址-街道
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "schoolAddress");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^.{2,}$");
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 紧急联系人姓名1
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "urgenContactOne");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\u4e00-\u9fa5a-zA-Z]{2,}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 关系1
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "relationOne");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("baseEnums", RelationType.values());
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 手机号码1
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "urgenPhoneOne");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "必须是11位数字");
            cydCheckTemp.put("checkWay", "^\\d{11}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 11);
            cydCheckTemps.add(cydCheckTemp);

            // 紧急联系人姓名2
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "urgenContactTwo");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\u4e00-\u9fa5a-zA-Z]{2,}$");
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 关系2
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "relationTwo");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("baseEnums", RelationType.values());
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 手机号码2
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "urgenPhoneTwo");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "必须是11位数字");
            cydCheckTemp.put("checkWay", "^\\d{11}$");
            cydCheckTemp.put("length", 11);
            cydCheckTemps.add(cydCheckTemp);

            // 实际放款金额
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "realFKMoney");
            cydCheckTemp.put("type", "BigDecimal");
            cydCheckTemp.put("typeName", "必须为十亿以下的数字");
            cydCheckTemp.put("checkWay", "^[1-9]\\d*(\\.\\d{1,2})?$");
            cydCheckTemp.put("length", 13);
            cydCheckTemps.add(cydCheckTemp);

            // 收款人姓名
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "receiversName");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\u4e00-\u9fa5a-zA-Z]{2,}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 收款人银行账号
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "receiversBankAccount");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^\\d{16,}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 19);
            cydCheckTemps.add(cydCheckTemp);

            // 收款银行
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "receiversBankName");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("valItem", getValItem(banks, "bankName"));
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 收款银行所在省
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "receiversBankProvince");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemps.add(cydCheckTemp);

            // 收款银行所在市
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "receiversBankCity");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemp.put("parentKey", "receiversBankProvince");
            cydCheckTemps.add(cydCheckTemp);

            // 收款支行
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "receiversBankBranch");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\u4e00-\u9fa5a-zA-Z]{2,}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 还款人姓名
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "repaymentName");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\u4e00-\u9fa5a-zA-Z]{2,}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 还款人银行账号
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "repaymentBankAccount");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^\\d{16,}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 19);
            cydCheckTemps.add(cydCheckTemp);

            // 还款银行
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "repaymentBankName");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("valItem", getValItem(banks, "bankName"));
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);

            // 还款银行所在省
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "repaymentBankProvince");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemps.add(cydCheckTemp);

            // 还款银行所在市
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "repaymentBankCity");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemp.put("checkFun", "districtValidate");
            cydCheckTemp.put("parentKey", "repaymentBankProvince");
            cydCheckTemps.add(cydCheckTemp);

            // 还款支行
            cydCheckTemp = new HashMap<String, Object>();
            cydCheckTemp.put("key", "repaymentBankBranch");
            cydCheckTemp.put("type", "String");
            cydCheckTemp.put("typeName", "填写错误");
            cydCheckTemp.put("checkWay", "^[\u4e00-\u9fa5a-zA-Z]{2,}$");
            cydCheckTemp.put("isNotNull", true);
            cydCheckTemp.put("length", 20);
            cydCheckTemps.add(cydCheckTemp);
        }
        return cydCheckTemps;
    }

    private List<String> getValItem(List<Map<String, String>> list, String key) {
        if (list == null)
            return null;
        List<String> valItem = new ArrayList<String>();
        for (Map<String, String> item : list) {
            valItem.add(item.get(key).toString());
        }
        return valItem;
    }
}
