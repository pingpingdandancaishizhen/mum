<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.sunfit.risk.buz.server.dao.corp.CustOperLogDAO" >
  <resultMap id="BaseResultMap" type="cn.sunfit.risk.buz.api.beans.corp.CustOperLog" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="VARCHAR" />
    <result column="cid" property="cid" jdbcType="VARCHAR" />
    <result column="oper_type" property="operType" jdbcType="VARCHAR" />
    <result column="oper_time" property="operTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="cn.sunfit.risk.buz.api.beans.corp.CustOperLog" extends="BaseResultMap" >
    <result column="detail" property="detail" jdbcType="LONGVARCHAR" />
  </resultMap>
  <resultMap id="CustOperLogDTOMap" type="cn.sunfit.risk.buz.api.vo.corp.CustOperLogDTO" extends="BaseResultMap">
    <result column="operater_name" property="operaterName" jdbcType="VARCHAR" />
    <result column="customer_name" property="customerName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, uid, cid, oper_type, oper_time
  </sql>
  <sql id="Blob_Column_List" >
    detail
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from risk_cust_oper_log
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <insert id="insert" parameterType="cn.sunfit.risk.buz.api.beans.corp.CustOperLog" >
    insert into risk_cust_oper_log (id, uid, cid, 
      oper_type, oper_time, detail
      )
    values (#{id,jdbcType=VARCHAR}, #{uid,jdbcType=VARCHAR}, #{cid,jdbcType=VARCHAR}, 
      #{operType,jdbcType=VARCHAR}, #{operTime,jdbcType=TIMESTAMP}, #{detail,jdbcType=LONGVARCHAR}
      )
  </insert>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="cn.sunfit.risk.buz.api.beans.corp.CustOperLog" >
    update risk_cust_oper_log
    set uid = #{uid,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=VARCHAR},
      oper_type = #{operType,jdbcType=VARCHAR},
      oper_time = #{operTime,jdbcType=TIMESTAMP},
      detail = #{detail,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.sunfit.risk.buz.api.beans.corp.CustOperLog" >
    update risk_cust_oper_log
    set uid = #{uid,jdbcType=VARCHAR},
      cid = #{cid,jdbcType=VARCHAR},
      oper_type = #{operType,jdbcType=VARCHAR},
      oper_time = #{operTime,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="queryCustOperLogList" resultMap="CustOperLogDTOMap" >
  	select 
    col.id, col.uid, col.cid, col.oper_type, col.oper_time, col.detail, cu.user_name as operater_name,c.name as customer_name
    from risk_cust_oper_log col, risk_corp_user cu ,${custLog.domain}_customers c
    where 
		col.uid = cu.id
	and col.cid = c.id
	<choose>
		<when test="custLog.cid != null and custLog.cid != ''">
		    and col.cid =  #{custLog.cid,jdbcType=VARCHAR} 
		</when>
		<otherwise>
			and col.cid in (
				SELECT id from 
				${custLog.domain}_customers where license_num = #{custLog.licenseNum,jdbcType=VARCHAR} 
			)
		</otherwise>
	</choose>
	<if test="custLog.operType != null">
		and col.oper_type in 
		<foreach item="type" collection="custLog.operType" open="(" separator="," close=")">
			${type}
		</foreach>
	</if>
	<if test="custLog.operaterName != null and custLog.operaterName != ''">
	    and cu.user_name like concat('%',#{custLog.operaterName,jdbcType=VARCHAR},'%')
	</if>
	<if test="custLog.startTime != null and custLog.startTime != '' and custLog.endTime != null and custLog.endTime != ''">
	    and col.oper_time between #{custLog.startTime,jdbcType=TIMESTAMP} and #{custLog.endTime,jdbcType=TIMESTAMP}
	</if>
    order by oper_time desc
  </select>
</mapper>